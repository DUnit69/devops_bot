version: '3.8'
networks:
  dem:
services:
  db_image:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all all md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: |
      postgres
      -c log_replication_commands=on
      -c log_min_messages=info
      -c logging_collector=on
      -c log_statement=all
      -c wal_level=replica
      -c hot_standby=on
      -c max_wal_senders=10
      -c max_replication_slots=10
      -c hot_standby_feedback=on
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    container_name: db_image
    networks:
      - dem
  db_repl_image:
    build:
      context: .
      dockerfile: Dockerfile
    user: postgres
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: replicator
      POSTGRES_PASSWORD: rep
      PGPASSWORD: rep
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=db_image --port=5432 --username=replicator
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      whoami
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    depends_on:
      - db_image
    container_name: db_repl_image
    networks:
      - dem
  bot_image:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile_app
    depends_on:
      - db_image
    container_name: bot_image
    networks:
      - dem
